    app:
      # Should be the same as backend.baseUrl when using the `app-backend` plugin.
      baseUrl: {{ required "Provide App baseUrl in values" .Values.backstage.baseUrl }}

    organization:
      name: "{{ .Values.backstage.companyName }}"

    backend:
      # Note that the baseUrl should be the URL that the browser and other clients
      # should use when communicating with the backend, i.e. it needs to be
      # reachable not just from within the backend host, but from all of your
      # callers. When its value is "http://localhost:7007", it's strictly private
      # and can't be reached by others.
      baseUrl: {{ .Values.backstage.baseUrl }}
      listen:
        port: {{ .Values.backstage.port }}
        # The following host directive binds to all IPv4 interfaces when its value
        # is "0.0.0.0". This is the most permissive setting. The right value depends
        # on your specific deployment. If you remove the host line entirely, the
        # backend will bind on the interface that corresponds to the backend.baseUrl
        # hostname.
        host: 0.0.0.0
      csp:
        connect-src: ["'self'", 'http:', 'https:']
        # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
        # Default Helmet Content-Security-Policy values can be removed by setting the key to false
      cors:
        origin: {{ .Values.backstage.baseUrl }}
        methods: [GET, POST, PUT, DELETE]
        credentials: true

      # config options: https://node-postgres.com/api/client
      database:
      {{- with .Values.backstage.database }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

      cache:
        store: memory

    {{- with .Values.github }}
    integrations: 
    {{- if .enabled | default false }}
      github:
        - host: {{ .host | default "github.com" }}
          apps:
            - appId: {{ required "GitHub App ID is required" .appId | quote }}
              clientId: {{ required "GitHub App Client ID is required" .clientId | quote }}
              clientSecret: {{ required "GitHub App Client Secret is required" .clientSecret | quote }}
              webhookSecret: {{ .webhookSecret | default "replaceme" }}
              privateKey: |
                {{- required "GitHub App Private Key is required" .privateKey | nindent 16 }}
    {{- else }}
      {}
    {{- end }}
    {{- end }}

    proxy:
      '/quay/api':
        target: 'https://quay.io'
        headers:
          X-Requested-With: 'XMLHttpRequest'
          # Uncomment the following line to access a private Quay Repository using a token
          # Authorization: 'Bearer <YOUR TOKEN>'
        changeOrigin: true
        # Change to "false" in case of using self hosted quay instance with a self-signed certificate
        secure: true

    quay:
      # The UI url for Quay, used to generate the link to Quay
      uiUrl: 'https://quay.io'

    # Reference documentation http://backstage.io/docs/features/techdocs/configuration
    # Note: After experimenting with basic setup, use CI/CD to generate docs
    # and an external cloud storage when deploying TechDocs for production use-case.
    # https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
    techdocs:
      builder: 'local' # Alternatives - 'external'
      generator:
        runIn: 'local' # Alternatives - 'local'
      publisher:
        type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
    {{- with .Values.argocd }}
    {{- if .enabled | default false }}
    argocd:
      waitCycles: {{ .waitCycles }}
      appLocatorMethods:
        - type: 'config'
          instances:
            - name: main
              url: "{{ .url }}"
              token: "{{ .token }}"
    {{- end }}
    {{- end }}
    auth:
      # see https://backstage.io/docs/auth/ to learn about auth providers
      environment: {{ .Values.environment | default "development" }}
      providers:
{{- if .Values.oauth.enabled }}
        oauth2Proxy: {}
{{- end }}
{{- with .Values.auth.github }}
{{- if .enabled }}
        github:
          {{ .environment | default "development" }}:
            clientId: {{ .clientId | quote }}
            clientSecret: {{ .clientSecret | quote }}
{{- end }}
{{- end }}

    scaffolder:
      # see https://backstage.io/docs/features/software-templates/configuration for software template options

    catalog:
      # Overrides the default list locations from app-config.yaml as these contain example data.
      # See https://backstage.io/docs/features/software-catalog/software-catalog-overview#adding-components-to-the-catalog for more details
      # on how to get entities into the catalog.
      {{- with .Values.backstage.catalog }}
        {{- toYaml . | nindent 6 }}
      {{- end }}

{{- with .Values.kubernetes }}
{{- if .enabled }}
    kubernetes:
      serviceLocatorMethod:
        type: "multiTenant"
      clusterLocatorMethods:
        - type: "config"
          clusters:
            - name: {{ .name | default "dev-cluster-infra" }}
              url: {{ .url }}
              authProvider: "serviceAccount"
              skipTLSVerify: true
              serviceAccountToken: {{ .token | quote }}
{{- if .tektonEnabled }}
      customResources:
        - group: 'tekton.dev'
          apiVersion: 'v1beta1'
          plural: 'pipelines'
        - group: 'tekton.dev'
          apiVersion: 'v1beta1'
          plural: 'pipelineruns'
        - group: 'tekton.dev'
          apiVersion: 'v1beta1'
          plural: 'taskruns'
        - group: 'route.openshift.io'
          apiVersion: 'v1'
          plural: 'routes'
{{- end }}
{{- end }}
{{- end }}
{{- if .Values.githubOrgProvider.enabled }}
    github-org-provider:
      id: "github-org-entity-provider"
      orgUrl: "https://github.com/{{ .Values.github.organization }}"
{{- end }}
{{- with .Values.ocm }}
{{- if .enabled }}
    ocm:
      hub:
        name: 'replace_me'
        url: 'replace_me'
        serviceAccountToken: 'replace_me'
{{- end }}
{{- end }}
    enabled:
      kubernetes: {{ .Values.kubernetes.enabled }}
      techdocs: {{ .Values.techdocs.enabled }}
      argocd: {{ .Values.argocd.enabled }}
      sonarqube: {{ .Values.sonarqube.enabled }}
      keycloak: {{ .Values.oauth.enabled }}
      ocm: {{ .Values.ocm.enabled }}
      github: {{ .Values.github.enabled }}
      githubOrg: {{ .Values.githubOrgProvider.enabled }}
      gitlab: false
      jenkins: false